// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default (auto()) @map("_id") @db.ObjectId
  name String
  image String? // the ? means optional 
  email String? @unique 
  emailVerified DateTime?
  hashedpassword String?
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
  favouriteIds String[] @db.ObjectId // gonna be an array of string (multiple of favourite films or somthing like this)
  sessions Session[]
  accounts Account[]
}

model Account{
    id String @id @default (auto()) @map("_id") @db.ObjectId
    userId String @db.ObjectId
    type String
    provider String
    providerAccountId  String
    refresh_token String?  @db.String
    access_token String?  @db.String
    expires_at Int?
    token_type String?
    scope String?
    id_token String? @db.String
    session_state String?
    //all of this attribute is like a google account attribute 
  user User @relation(fields:[userId], references: [id], onDelete: Cascade) // li√© User avec account avec les id primaire et secondaires
  @@unique([provider,providerAccountId]) // cest deux attrebut sont unique 
} 
model Session{
  id String @id @default (auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime
   user User @relation(fields:[userId], references: [id], onDelete: Cascade)
}
model VerificationToken {
id String @id @default (auto()) @map("_id") @db.ObjectId
identifier String
token String @unique
expires DateTime
@@unique([identifier,token])
}

model Movie {
id String @id @default (auto()) @map("_id") @db.ObjectId
title String
description String
videoUrl String
thumbnailUrl String
genre String
duration String
}